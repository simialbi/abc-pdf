<html>
<head>
<title>GetText Method</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../../../mystyles.css"></head>

<body bgcolor="#FFFFFF">
<table border="0" cellpadding="0" cellspacing="4">
  <tr>
    <td valign="top"><img src="../../../images/goo.gif" width="58" height="60"></td>
    <td width="14">&nbsp;</td>
    <td>
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr>
          <td class="pageheader" height="59">GetText Method</td>
          <td width="60" height="59">&nbsp;</td>
          <td height="59">&nbsp;</td>
        </tr>
        <tr>
          <td background="../../../images/steel-line-3.gif" height="11"></td>
          <td background="../../../images/steel-line-3.gif" height="11" width="60"></td>
          <td height="11"><img src="../../../images/steel-blob-11.gif" width="11" height="11"></td>
        </tr>
        <tr>
          <td>
            <p>Extracts content from the current page in a specified format.</p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td valign="top" class="sectheader"><img src="../../../images/steel-pin.gif" width="64" height="10"><br>Syntax</td>
    <td width="14">&nbsp;</td>
    <td valign="top">
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr>
          <td valign="top">
            <p><code>Text = Doc.GetText(Type)</code></p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td valign="top" class="sectheader"><img src="../../../images/steel-pin.gif" width="64" height="10"><br>Params</td>
    <td width="14">&nbsp;</td>
    <td valign="top">
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr>
          <td valign="top">
            <table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF">
              <tr>
                <td align="center"><b>Name</b></td>
                <td><b>Type</b></td>
                <td><b>Description</b></td>
              </tr>
              <tr valign="top">
                <td align="center">Type</td>
                <td>String</td>
                <td>The format in which to return the content.</td>
              </tr>
              <tr valign="top">
                <td align="center">Text</td>
                <td>String</td>
                <td>The returned content.</td>
              </tr>
            </table>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td valign="top" class="sectheader"><img src="../../../images/steel-pin.gif" width="64" height="10"><br>Notes</td>
    <td width="14">&nbsp;</td>
    <td valign="top">
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr>
          <td>
            <p>This method allows you to extract the content from a page.</p>
            <p>There are three formats supported - &quot;Text&quot;, &quot;SVG&quot;
              and &quot;SVG+&quot;.</p>
            <p>Text is in layout order, which may not be the same as reading order.
              For example, what to a user may look like a space may simply
              be two items of text positioned apart from each other, or it may
              not. ABCpdf will make sensible assumptions on how items of text
              should be combined but many situations are ambiguous.</p>
            <p>SVG is an XML based format for representing vector graphics. Because
              SVG is standard XML, it's easy to parse and gives you the precise
              position of each item of text on the page. The way that ABCpdf constructs
              the SVG should make it easy to extract any information you require.
              ABCpdf currently supports SVG text and paths.</p>
            <p>For example, a simple &quot;Hello World&quot; PDF might produce
              the following content:</p>
            <p><code>&lt;?xml version=&quot;1.0&quot; standalone=&quot;no&quot;?&gt;<br>
              &lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot; &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;&gt;<br>
              &lt;svg width=&quot;612&quot; height=&quot;792&quot; x=&quot;0&quot;
              y=&quot;0&quot;&gt;<br>
              &lt;text x=&quot;0&quot; y=&quot;76.8&quot; font-size=&quot;96&quot;
              font-family=&quot;Times-Roman&quot; &gt;Hello World&lt;/text&gt;<br>
              &lt;/svg&gt;</code></p>
            <p>SVG+ is an annotated form of SVG which includes details of the
              PDF operators and how they relate to the items of content in the
              SVG. It can be very useful if you are trying to deconstruct a page
              and determine how objects in the PDF relate to objects in the SVG.</p>
            <p>For example, you could use SVG+ to identify the section of a PDF
              stream that relates to a particular word on a page. You could then
              replace the text show operator for that word with another one. Effectively,
              you'd be performing a low-level Search/Replace on the PDF document.</p>
            <p>There is no official standard for SVG+, but if you are familiar
              with the PDF specification it should be easy enough to understand.</p>
            <p>For example, a simple &quot;Hello World&quot; PDF might produce
              the following content:</p>
            <p><code>&lt;?xml version=&quot;1.0&quot; standalone=&quot;no&quot;?&gt;<br>
              &lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot; &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;&gt;<br>
              &lt;svg width=&quot;612&quot; height=&quot;792&quot; x=&quot;0&quot;
              y=&quot;0&quot;&gt;<br>
              &lt;pdf pdf_Op=&quot;q&quot; pdf_StreamID=&quot;5&quot; pdf_StreamOffset=&quot;0&quot;
              pdf_StreamLength=&quot;1&quot; /&gt;<br>
              &lt;pdf pdf_Op=&quot;BT&quot; pdf_StreamID=&quot;5&quot; pdf_StreamOffset=&quot;3&quot;
              pdf_StreamLength=&quot;2&quot; /&gt;<br>
              &lt;pdf pdf_Op=&quot;0 Tr&quot; pdf_StreamID=&quot;5&quot; pdf_StreamOffset=&quot;7&quot;
              pdf_StreamLength=&quot;4&quot; /&gt;<br>
              &lt;pdf pdf_Op=&quot;/Fabc6 96 Tf&quot; pdf_StreamID=&quot;5&quot;
              pdf_StreamOffset=&quot;13&quot; pdf_StreamLength=&quot;12&quot;
              /&gt;<br>
              &lt;pdf pdf_Op=&quot;0 0 0 rg&quot; pdf_StreamID=&quot;5&quot; pdf_StreamOffset=&quot;27&quot;
              pdf_StreamLength=&quot;8&quot; /&gt;<br>
              &lt;pdf pdf_Op=&quot;1 0 0 1 0 715.2 Tm&quot; pdf_StreamID=&quot;5&quot;
              pdf_StreamOffset=&quot;37&quot; pdf_StreamLength=&quot;18&quot;
              /&gt;<br>
              &lt;pdf pdf_Op=&quot;0 Ts&quot; pdf_StreamID=&quot;5&quot; pdf_StreamOffset=&quot;57&quot;
              pdf_StreamLength=&quot;4&quot; /&gt;<br>
              &lt;text x=&quot;0&quot; y=&quot;76.8&quot; font-size=&quot;96&quot;
              font-family=&quot;Times-Roman&quot; pdf_CTM=&quot;1 0 0 1 0 0&quot;
              pdf_TM=&quot;1 0 0 1 0 715.2&quot; pdf_Trm=&quot;96 0 0 96 0 715.2&quot;
              pdf_Tf=&quot;Fabc6&quot; pdf_Tz=&quot;100&quot; pdf_Ts=&quot;0&quot;
              pdf_w1000=&quot;5027&quot; pdf_Op=&quot;(Hello World) Tj&quot; pdf_StreamID=&quot;5&quot;
              pdf_StreamOffset=&quot;63&quot; pdf_StreamLength=&quot;16&quot;
              &gt;Hello World&lt;/text&gt;<br>
              &lt;pdf /&gt;<br>
              &lt;pdf pdf_Op=&quot;ET&quot; pdf_StreamID=&quot;5&quot; pdf_StreamOffset=&quot;81&quot;
              pdf_StreamLength=&quot;2&quot; /&gt;<br>
              &lt;pdf pdf_Op=&quot;Q&quot; pdf_StreamID=&quot;5&quot; pdf_StreamOffset=&quot;85&quot;
              pdf_StreamLength=&quot;1&quot; /&gt;<br>
              &lt;/svg&gt;</code></p>
            <p>The operators within the PDF stream are detailed in the SVG. For
              example, the first 'q' operator is located in Object ID 5 at offset
              0 and has a length of 1 byte. The 'Tj' operator which shows &quot;Hello
              World&quot; is at offset 63 and has length 16. The Current Transformation
              Matrix (CTM), the Text Matrix (TM), and other important PDF state
              values are shown.</p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td valign="top" class="sectheader"><img src="../../../images/steel-pin.gif" width="64" height="10"><br>Example</td>
    <td width="14">&nbsp;</td>
    <td valign="top">
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr>
          <td>
            <p>None.</p>
            <p>&nbsp;</p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
